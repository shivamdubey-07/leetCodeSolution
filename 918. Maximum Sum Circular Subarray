class Solution {

    public int kadane(int[] nums){
        int n=nums.length;
        int sum=0;
        int max=nums[0];

        for(int i=0;i<n;i++){

            sum+=nums[i];
            max=Math.max(sum,max);

            if(sum<0) sum=0;


        }
        return max;
    }


    public int maxSubarraySumCircular(int[] nums) {
        int max=0;
        int normalMax=kadane(nums);
    int total=0;
        for(int i=0;i<nums.length;i++){
            total+=nums[i];
            nums[i]=nums[i]*(-1);
        }

        int minusMax=kadane(nums);


        if(total+minusMax==0) return normalMax;

        return Math.max(normalMax, total+minusMax);



    }
}
